# DS-Containers/.github/workflows/weekly_report_workflow.yml
name: Weekly Expense Report Generation and ML

on:
  # Schedule to run every Friday at 00:00 UTC
  schedule:
    - cron: '0 0 * * 5' # Minute 0, Hour 0, Day of month *, Month *, Day of week 5 (Friday)

  # Allow manual trigger from GitHub Actions UI
  workflow_dispatch:

jobs:
  generate-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Match your local Python version
          cache: 'pip' # Cache pip dependencies

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt # Install dependencies for app scripts

      - name: Create data and reports directories
        run: |
          mkdir data
          mkdir reports
        shell: bash

      - name: Generate Expense Data
        run: |
          # The script will generate a CSV into the 'data/' directory in the runner's workspace
          python app/data_generator.py data
        shell: bash

      - name: Run ML Experiment and Log to MLflow
        env:
          # IMPORTANT: For real MLflow logging from GHA, these would point to a remote MLflow server.
          # For this demo, we set them to local paths within the GHA runner's workspace.
          MLFLOW_TRACKING_URI: file:///github/workspace/reports/mlruns
          MLFLOW_ARTIFACT_URI: file:///github/workspace/reports/artifacts
        run: |
          # Get the name of the most recently generated CSV file
          # This assumes data_generator.py prints the full path as its last line.
          DATA_FILE_NAME=$(ls -t data/*.csv | head -n 1)
          echo "Using data file: ${DATA_FILE_NAME}"

          # Run the ML experiment script
          python app/ml_experiment.py ${DATA_FILE_NAME}
        shell: bash

      - name: Upload MLflow Reports as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-reports-${{ github.run_id }}
          path: reports/ # Upload the entire reports directory
          retention-days: 7 # How long to keep the artifact

      - name: Upload Data as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-${{ github.run_id }}
          path: data/ # Upload the entire data directory
          retention-days: 7 # How long to keep the artifact
